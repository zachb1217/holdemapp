{"version":3,"sources":["constants/actionTypes.js","constants/suits.js","constants/values.js","constants/cardTypes.js","utils/deckUtils.js","reducers/gameReducer.js","indexReducer.js","reducers/deckReducer.js","reducers/playerReducer.js","actions/gameActions.js","utils/cardUtils.js","game/Table.js","game/PlayerSection.js","game/Game.js","App.js","serviceWorker.js","index.js"],"names":["twoSpades","value","values","suit","suits","id","twoClubs","twoHearts","twoDiamonds","threeSpades","threeClubs","threeHearts","threeDiamonds","fourSpades","fourClubs","fourHearts","fourDiamonds","fiveSpades","fiveClubs","fiveHearts","fiveDiamonds","sixSpades","sixClubs","sixHearts","sixDiamonds","sevenSpades","sevenClubs","sevenHearts","sevenDiamonds","eightSpades","eightClubs","eightHearts","eightDiamonds","nineSpades","nineClubs","nineHearts","nineDiamonds","tenSpades","tenClubs","tenHearts","tenDiamonds","jackSpades","jackClubs","jackHearts","jackDiamonds","queenSpades","queenClubs","queenHearts","queenDiamonds","kingSpades","kingClubs","kingHearts","kingDiamonds","aceSpades","aceClubs","aceHearts","aceDiamonds","generateDeck","shuffle","Object","cardTypes","deck","shuffledDeck","slice","i","length","rand","randomInt","temp","deal","target","amount","newDeck","newTarget","ctr","topCard","pop","push","max","Math","floor","random","defaultState","tableCards","players","indexReducer","combineReducers","state","player","Immutable","Map","game","action","type","actions","set","deckUtils","get","_","forEach","hand","undefined","update","newState","payload","newPlayer","playerName","dealHands","addPlayer","generateImg","card","resourceString","key","className","src","alt","Value","Suit","Table","map","this","props","cards","React","Component","PlayerSection","cardUtils","connect","minBet","curBet","dispatch","bet","check","fold","Game","serverTest","fetch","then","response","json","data","setState","serverData","startGame","onClick","dealCard","name","App","Boolean","window","location","hostname","match","store","createStore","compose","applyMiddleware","thunk","devToolsExtension","f","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c9ada6ac.chunk.js","sourcesContent":["export default {\n  startGame: 'START_GAME',\n  generateDeck: 'GENERATE_DECK',\n  dealCards: 'DEAL_CARDS',\n  dealHands: 'DEAL_HANDS',\n  addPlayer: 'ADD_PLAYER'\n};","export default {\n  Clubs: 'Clubs',\n  Diamonds: 'Diamonds',\n  Hearts: 'Hearts',\n  Spades: 'Spades'\n}","export default {\n  Two: 2,\n  Three: 3,\n  Four: 4,\n  Five: 5,\n  Six: 6,\n  Seven: 7,\n  Eight: 8,\n  Nine: 9,\n  Ten: 10,\n  Jack: 11,\n  Queen: 12,\n  King: 13,\n  Ace: 14\n}","import suits from './suits';\nimport values from './values';\n\nexport default {\n  twoSpades: {\n    value: values.Two,\n    suit: suits.Spades,\n    id: '2S'\n  },\n  twoClubs: {\n    value: values.Two,\n    suit: suits.Clubs,\n    id: '2C'\n  },\n  twoHearts: {\n    value: values.Two,\n    suit: suits.Hearts,\n    id: '2H'\n  },\n  twoDiamonds: {\n    value: values.Two,\n    suit: suits.Diamonds,\n    id: '2D'\n  },\n  threeSpades: {\n    value: values.Three,\n    suit: suits.Spades,\n    id: '3S'\n  },\n  threeClubs: {\n    value: values.Three,\n    suit: suits.Clubs,\n    id: '3C'\n  },\n  threeHearts: {\n    value: values.Three,\n    suit: suits.Hearts,\n    id: '3H'\n  },\n  threeDiamonds: {\n    value: values.Three,\n    suit: suits.Diamonds,\n    id: '3D'\n  },\n  fourSpades: {\n    value: values.Four,\n    suit: suits.Spades,\n    id: '4S'\n  },\n  fourClubs: {\n    value: values.Four,\n    suit: suits.Clubs,\n    id: '4C'\n  },\n  fourHearts: {\n    value: values.Four,\n    suit: suits.Hearts,\n    id: '4H'\n  },\n  fourDiamonds: {\n    value: values.Four,\n    suit: suits.Diamonds,\n    id: '4D'\n  },\n  fiveSpades: {\n    value: values.Five,\n    suit: suits.Spades,\n    id: '5S'\n  },\n  fiveClubs: {\n    value: values.Five,\n    suit: suits.Clubs,\n    id: '5C'\n  },\n  fiveHearts: {\n    value: values.Five,\n    suit: suits.Hearts,\n    id: '5H'\n  },\n  fiveDiamonds: {\n    value: values.Five,\n    suit: suits.Diamonds,\n    id: '5D'\n  },\n  sixSpades: {\n    value: values.Six,\n    suit: suits.Spades,\n    id: '6S'\n  },\n  sixClubs: {\n    value: values.Six,\n    suit: suits.Clubs,\n    id: '6C'\n  },\n  sixHearts: {\n    value: values.Six,\n    suit: suits.Hearts,\n    id: '6H'\n  },\n  sixDiamonds: {\n    value: values.Six,\n    suit: suits.Diamonds,\n    id: '6D'\n  },\n  sevenSpades: {\n    value: values.Seven,\n    suit: suits.Spades,\n    id: '7S'\n  },\n  sevenClubs: {\n    value: values.Seven,\n    suit: suits.Clubs,\n    id: '7C'\n  },\n  sevenHearts: {\n    value: values.Seven,\n    suit: suits.Hearts,\n    id: '7H'\n  },\n  sevenDiamonds: {\n    value: values.Seven,\n    suit: suits.Diamonds,\n    id: '7D'\n  },\n  eightSpades: {\n    value: values.Eight,\n    suit: suits.Spades,\n    id: '8S'\n  },\n  eightClubs: {\n    value: values.Eight,\n    suit: suits.Clubs,\n    id: '8C'\n  },\n  eightHearts: {\n    value: values.Eight,\n    suit: suits.Hearts,\n    id: '8H'\n  },\n  eightDiamonds: {\n    value: values.Eight,\n    suit: suits.Diamonds,\n    id: '8D'\n  },\n  nineSpades: {\n    value: values.Nine,\n    suit: suits.Spades,\n    id: '9S'\n  },\n  nineClubs: {\n    value: values.Nine,\n    suit: suits.Clubs,\n    id: '9C'\n  },\n  nineHearts: {\n    value: values.Nine,\n    suit: suits.Hearts,\n    id: '9H'\n  },\n  nineDiamonds: {\n    value: values.Nine,\n    suit: suits.Diamonds,\n    id: '9D'\n  },\n  tenSpades: {\n    value: values.Ten,\n    suit: suits.Spades,\n    id: '10S'\n  },\n  tenClubs: {\n    value: values.Ten,\n    suit: suits.Clubs,\n    id: '10C'\n  },\n  tenHearts: {\n    value: values.Ten,\n    suit: suits.Hearts,\n    id: '10H'\n  },\n  tenDiamonds: {\n    value: values.Ten,\n    suit: suits.Diamonds,\n    id: '10D'\n  },\n  jackSpades: {\n    value: values.Jack,\n    suit: suits.Spades,\n    id: 'JS'\n  },\n  jackClubs: {\n    value: values.Jack,\n    suit: suits.Clubs,\n    id: 'JC'\n  },\n  jackHearts: {\n    value: values.Jack,\n    suit: suits.Hearts,\n    id: 'JH'\n  },\n  jackDiamonds: {\n    value: values.Jack,\n    suit: suits.Diamonds,\n    id: 'JD'\n  },\n  queenSpades: {\n    value: values.Queen,\n    suit: suits.Spades,\n    id: 'QS'\n  },\n  queenClubs: {\n    value: values.Queen,\n    suit: suits.Clubs,\n    id: 'QC'\n  },\n  queenHearts: {\n    value: values.Queen,\n    suit: suits.Hearts,\n    id: 'QH'\n  },\n  queenDiamonds: {\n    value: values.Queen,\n    suit: suits.Diamonds,\n    id: 'QD'\n  },\n  kingSpades: {\n    value: values.King,\n    suit: suits.Spades,\n    id: 'KS'\n  },\n  kingClubs: {\n    value: values.King,\n    suit: suits.Clubs,\n    id: 'KC'\n  },\n  kingHearts: {\n    value: values.King,\n    suit: suits.Hearts,\n    id: 'KH'\n  },\n  kingDiamonds: {\n    value: values.King,\n    suit: suits.Diamonds,\n    id: 'KD'\n  },\n  aceSpades: {\n    value: values.Ace,\n    suit: suits.Spades,\n    id: 'AS'\n  },\n  aceClubs: {\n    value: values.Ace,\n    suit: suits.Clubs,\n    id: 'AC'\n  },\n  aceHearts: {\n    value: values.Ace,\n    suit: suits.Hearts,\n    id: 'AH'\n  },\n  aceDiamonds: {\n    value: values.Ace,\n    suit: suits.Diamonds,\n    id: 'AD'\n  }\n};","import cardTypes from '../constants/cardTypes';\n\nexport const generateDeck = () => {\n  return shuffle(Object.values(cardTypes));\n}\n\nconst shuffle = (deck) => {\n  var shuffledDeck = deck.slice();\n  for (var i = shuffledDeck.length - 1; i >= 0; i--) {\n    var rand = randomInt(i);\n    var temp = shuffledDeck[rand];\n    shuffledDeck[rand] = shuffledDeck[i];\n    shuffledDeck[i] = temp;\n  }\n  return shuffledDeck;\n}\n\n\nexport const deal = (deck, target, amount) => {\n   let newDeck = deck.slice();\n   let newTarget = target.slice();\n   let ctr = amount;\n   while (ctr > 0) {\n     let topCard = newDeck.pop();\n     newTarget.push(topCard);\n     ctr--;\n   }\n   return {\n     deck: newDeck,\n     target: newTarget\n   }\n}\n\nconst randomInt = (max) => {\n  return Math.floor(Math.random() * max);\n}\n","import Immutable from 'immutable';\nimport actions from '../constants/actionTypes';\nimport * as deckUtils from '../utils/deckUtils';\nimport _ from 'lodash';\n\nconst defaultState = {\n  deck: [],\n  tableCards: [],\n  players: []\n}\n\nexport default (state = Immutable.Map(defaultState), action) => {\n     switch(action.type) {\n       case actions.generateDeck: {\n         return state.set('deck', deckUtils.generateDeck());\n       }\n       case actions.dealHands: {\n         let deck = state.get('deck').slice();\n         let players = state.get('players').slice();\n         _.forEach(players, (player) => {\n           let hand = player.hand === undefined ? [] : player.hand;\n           let update = deckUtils.deal(deck, hand, 2);\n           player.hand = update.target;\n           deck = update.deck;\n         });\n         let newState = state;\n         newState = newState.set('players', players);\n         return newState.set('deck', deck);\n       }\n       case actions.dealCards: {\n         let deck = state.get('deck');\n         let tableCards = state.get('tableCards');\n         if (deck.length === 0) {\n           return state;\n         }\n         let update = deckUtils.deal(deck, tableCards, action.payload);\n         let newState = state.set('deck', update.deck);\n         newState = newState.set('tableCards', update.target);\n         return newState;\n       }\n       case actions.addPlayer: {\n         var newPlayer = {\n           playerName: action.payload\n         }\n         let players = state.get('players').slice();\n         players.push(newPlayer);\n         return state.set('players', players);\n       }\n       default:\n         return state;\n     }\n   }","import {combineReducers} from 'redux';\nimport deckReducer from './reducers/deckReducer';\nimport playerReducer from './reducers/playerReducer';\nimport gameReducer from './reducers/gameReducer';\n\nconst indexReducer = combineReducers({\n   deck: deckReducer,\n   player: playerReducer,\n   game: gameReducer\n})\n\nexport default (indexReducer);","\nexport default (state = [], action) => {\n     return state;\n   }","import Immutable from 'immutable';\n\nexport default (state = Immutable.Map(), action) => {\n     return state;\n   }","import actions from '../constants/actionTypes';\n\nexport const startGame = () => {\n  return (dispatch) => {\n    dispatch(addPlayer('zac'));\n    dispatch(addPlayer('zacc'));\n    dispatch(addPlayer('zuck'));\n    dispatch(addPlayer('bill'));\n    dispatch(generateDeck());\n    dispatch(dealHands());\n  };\n}\nexport const generateDeck = () => {\n  return {\n    type: actions.generateDeck\n  }\n}\n\nexport const dealHands = () => {\n  return {\n    type: actions.dealHands\n  }\n}\n\nexport const dealCards = (amount) => {\n  return {\n    type: actions.dealCards,\n    payload: amount\n  }\n}\n\nexport const addPlayer = (playerName) => {\n  return {\n    type: actions.addPlayer,\n    payload: playerName\n  }\n}","import React from 'react';\n\nexport const generateImg = (card) => {\n  const resourceString = '/pokercards/' + card.id + '.png';\n  return (\n    <img key={card.id} className='Card' src={resourceString} alt={card.Value + 'of' + card.Suit}/>\n  );\n}","import React from 'react';\nimport '../styles/Table.css';\nimport '../styles/Card.css';\nimport _ from 'lodash';\nimport {generateImg} from '../utils/cardUtils';\n\nexport class Table extends React.Component {\n  render() {\n    return <div className='Table'>\n    <div>\n    {\n      _.map(this.props.cards, generateImg)\n    }\n    </div>\n    </div>;\n  }\n}\n\nexport default (Table);","import React from 'react';\nimport {connect} from 'react-redux';\nimport * as cardUtils from '../utils/cardUtils';\nimport _ from 'lodash';\nimport '../styles/Player.css';\n\nexport class PlayerSection extends React.Component {\n  render() {\n    return <div className='Player-Section'>\n    <header>'Hello'</header>\n    {\n      _.map(this.props.players, (player) => {\n        return <div className='One-Player'>\n        {player.playerName}\n        <div>\n        {_.map(player.hand, cardUtils.generateImg)}\n        </div>\n        </div>\n      })\n    }\n    </div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    minBet: null,\n    curBet: null\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    bet: null,\n    check: null,\n    fold: null\n\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlayerSection);","import React from 'react';\nimport {connect} from 'react-redux';\nimport * as gameActions from '../actions/gameActions';\nimport '../styles/Game.css';\nimport {Table} from './Table';\nimport PlayerSection from './PlayerSection';\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.startGame();\n    this.state = {\n      serverData: {}\n    }\n    this.serverTest();\n  }\n\n  serverTest = () => {\n    fetch('/flower')\n    .then(response => response.json())\n    .then(data => {\n        this.setState(\n            {serverData: data}\n        );\n    });\n  }\n\n  render() {\n    return <div>\n      <button onClick={this.props.dealCard}>DEAL</button>\n      <div>{this.state.serverData.name}</div>\n      <Table cards={this.props.tableCards}/>\n      <hr className='divider'/>\n      <PlayerSection players={this.props.players}/>\n    </div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    deck: state.game.get('deck'),\n    tableCards: state.game.get('tableCards'),\n    players: state.game.get('players')\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startGame: () => {\n      dispatch(gameActions.startGame());\n    },\n    dealCard: () => {\n      dispatch(gameActions.dealCards(1));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Game);","import React from 'react';\nimport Game from './game/Game';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        Poker App\n      </header>\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport  {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport indexReducer from './indexReducer';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  indexReducer,\n  compose(\n      applyMiddleware(thunk),\n      window.devToolsExtension ? window.devToolsExtension() : (f) => f\n    )\n  )\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}